/**\n * Educational Content Generator\n * Creates adaptive, multi-level medical education content synchronized to EKG visualization\n */\n\nimport { MedicalAnalysis, EducationalContent } from '@ekg-sim/medical-types';\n\nexport type LearningLevel = 'beginner' | 'intermediate' | 'advanced';\n\nexport interface NarrationCue {\n  timestamp_ms: number;\n  content: string;\n  emphasis_level: 'normal' | 'important' | 'critical';\n  visual_highlight?: string;\n  audio_cue?: 'heartbeat' | 'electrical' | 'flow';\n}\n\nexport interface EducationalModule {\n  id: string;\n  title: string;\n  objectives: string[];\n  prerequisites: string[];\n  content: EducationalContent;\n  assessment?: {\n    questions: QuizQuestion[];\n    passing_score: number;\n  };\n}\n\nexport interface QuizQuestion {\n  id: string;\n  type: 'multiple_choice' | 'true_false' | 'identification' | 'timing';\n  question: string;\n  options?: string[];\n  correct_answer: string | number;\n  explanation: string;\n  difficulty: LearningLevel;\n}\n\nexport class EducationalContentGenerator {\n  private medicalKnowledgeBase: Map<string, any>;\n  private contentTemplates: Map<string, any>;\n  private narrationLibrary: Map<string, string[]>;\n  \n  constructor() {\n    this.initializeMedicalKnowledge();\n    this.initializeContentTemplates();\n    this.initializeNarrationLibrary();\n  }\n  \n  /**\n   * Generate complete educational content for a medical analysis\n   */\n  public async generateEducationalContent(\n    medicalAnalysis: MedicalAnalysis,\n    learningLevel: LearningLevel,\n    visualTiming?: any\n  ): Promise<EducationalContent> {\n    \n    console.log(`Generating ${learningLevel} educational content for ${medicalAnalysis.rhythm_classification}`);\n    \n    try {\n      // Generate core educational elements\n      const keyTeachingPoints = this.generateKeyTeachingPoints(medicalAnalysis, learningLevel);\n      const rhythmExplanation = this.generateRhythmExplanation(medicalAnalysis, learningLevel);\n      const clinicalSignificance = this.generateClinicalSignificanceExplanation(medicalAnalysis, learningLevel);\n      \n      // Generate synchronized narration\n      const narrationTiming = this.generateNarrationTiming(\n        medicalAnalysis, \n        learningLevel, \n        visualTiming\n      );\n      \n      // Create interactive elements\n      const interactiveElements = this.generateInteractiveElements(medicalAnalysis, learningLevel);\n      \n      // Generate accessibility features\n      const accessibility = this.generateAccessibilityFeatures(medicalAnalysis, learningLevel);\n      \n      // Create learning progression\n      const learningProgression = this.generateLearningProgression(medicalAnalysis, learningLevel);\n      \n      const educationalContent: EducationalContent = {\n        complexity_level: learningLevel,\n        key_teaching_points: keyTeachingPoints,\n        rhythm_explanation: rhythmExplanation,\n        clinical_significance_explanation: clinicalSignificance,\n        narration_timing: narrationTiming,\n        interactive_elements: interactiveElements,\n        accessibility,\n        learning_progression: learningProgression\n      };\n      \n      console.log('Educational content generated successfully');\n      return educationalContent;\n      \n    } catch (error) {\n      console.error('Educational content generation failed:', error);\n      throw new Error(`Educational content generation failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n  \n  /**\n   * Generate key teaching points based on rhythm and learning level\n   */\n  private generateKeyTeachingPoints(analysis: MedicalAnalysis, level: LearningLevel): string[] {\n    const rhythm = analysis.rhythm_classification;\n    const basePoints = this.getBaseTeachingPoints(rhythm);\n    \n    switch (level) {\n      case 'beginner':\n        return this.filterForBeginnerLevel(basePoints, rhythm);\n      case 'intermediate':\n        return this.expandForIntermediateLevel(basePoints, analysis);\n      case 'advanced':\n        return this.enrichForAdvancedLevel(basePoints, analysis);\n      default:\n        return basePoints;\n    }\n  }\n  \n  private getBaseTeachingPoints(rhythm: string): string[] {\n    const teachingPoints: Record<string, string[]> = {\n      'normal_sinus': [\n        'Normal sinus rhythm originates from the SA node',\n        'Regular P waves precede each QRS complex',\n        'Heart rate is typically 60-100 beats per minute',\n        'Electrical conduction follows the normal pathway',\n        'Both atria and ventricles contract in proper sequence'\n      ],\n      'atrial_fibrillation': [\n        'Atrial fibrillation shows chaotic atrial electrical activity',\n        'P waves are absent, replaced by fibrillatory waves',\n        'Ventricular response is irregularly irregular',\n        'Atrial mechanical function is lost',\n        'Stroke risk increases due to potential clot formation'\n      ],\n      'ventricular_tachycardia': [\n        'Ventricular tachycardia originates below the AV node',\n        'QRS complexes are wide and bizarre in appearance',\n        'Heart rate is typically 150-250 beats per minute',\n        'AV dissociation may be present',\n        'Can rapidly deteriorate to ventricular fibrillation'\n      ],\n      'heart_block': [\n        'Heart block represents delayed or blocked AV conduction',\n        'PR interval is prolonged beyond normal limits',\n        'May progress to higher degrees of block',\n        'Can cause symptoms if ventricular rate drops significantly',\n        'Pacemaker therapy may be required'\n      ],\n      'sinus_bradycardia': [\n        'Sinus bradycardia shows normal rhythm but slow rate',\n        'Heart rate is less than 60 beats per minute',\n        'May be physiological in athletes',\n        'Can cause symptoms if rate is very slow',\n        'Treatment depends on symptoms and underlying cause'\n      ],\n      'sinus_tachycardia': [\n        'Sinus tachycardia shows normal rhythm but fast rate',\n        'Heart rate exceeds 100 beats per minute',\n        'Usually represents physiological response',\n        'Underlying cause should be identified and treated',\n        'Rate control may be needed in some cases'\n      ]\n    };\n    \n    return teachingPoints[rhythm] || [\n      'This rhythm requires careful analysis',\n      'Clinical correlation is essential',\n      'Consider patient symptoms and history',\n      'Monitor for changes over time'\n    ];\n  }\n  \n  private filterForBeginnerLevel(points: string[], rhythm: string): string[] {\n    // Simplify language and focus on basic concepts\n    return points.slice(0, 3).map(point => {\n      // Simplify medical terminology\n      return point\n        .replace('irregularly irregular', 'very irregular')\n        .replace('AV dissociation', 'disconnected heart chambers')\n        .replace('fibrillatory waves', 'chaotic electrical activity')\n        .replace('ventricular response', 'heart rhythm');\n    });\n  }\n  \n  private expandForIntermediateLevel(points: string[], analysis: MedicalAnalysis): string[] {\n    // Add clinical context and moderate detail\n    const expanded = [...points];\n    \n    // Add heart rate specific information\n    expanded.push(`Current heart rate: ${analysis.heart_rate} BPM`);\n    \n    // Add interval information\n    if (analysis.intervals.pr_interval > 200) {\n      expanded.push(`Prolonged PR interval: ${analysis.intervals.pr_interval}ms (normal: 120-200ms)`);\n    }\n    \n    if (analysis.intervals.qrs_width > 120) {\n      expanded.push(`Wide QRS complex: ${analysis.intervals.qrs_width}ms (normal: <120ms)`);\n    }\n    \n    // Add clinical significance\n    expanded.push(`Clinical significance: ${analysis.clinical_significance}`);\n    \n    return expanded;\n  }\n  \n  private enrichForAdvancedLevel(points: string[], analysis: MedicalAnalysis): string[] {\n    // Add detailed pathophysiology and advanced concepts\n    const enriched = [...points];\n    \n    // Add pathophysiology\n    enriched.push(`Pathophysiology: ${analysis.pathophysiology}`);\n    \n    // Add detailed conduction timing\n    enriched.push(`SA-AV delay: ${analysis.conduction_timing.sa_to_av_delay}ms`);\n    enriched.push(`AV-His delay: ${analysis.conduction_timing.av_to_his_delay}ms`);\n    enriched.push(`His-Purkinje delay: ${analysis.conduction_timing.his_to_purkinje_delay}ms`);\n    \n    // Add treatment considerations\n    analysis.clinical_context.treatment_considerations.forEach(treatment => {\n      enriched.push(`Treatment consideration: ${treatment}`);\n    });\n    \n    // Add monitoring requirements\n    analysis.clinical_context.monitoring_requirements.forEach(requirement => {\n      enriched.push(`Monitoring: ${requirement}`);\n    });\n    \n    return enriched;\n  }\n  \n  /**\n   * Generate rhythm explanation appropriate for learning level\n   */\n  private generateRhythmExplanation(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const rhythm = analysis.rhythm_classification;\n    const baseExplanations = this.getBaseRhythmExplanations();\n    \n    let explanation = baseExplanations[rhythm] || 'This rhythm requires further analysis.';\n    \n    switch (level) {\n      case 'beginner':\n        explanation = this.simplifyExplanation(explanation);\n        break;\n      case 'intermediate':\n        explanation = this.addClinicalContext(explanation, analysis);\n        break;\n      case 'advanced':\n        explanation = this.addDetailedPathophysiology(explanation, analysis);\n        break;\n    }\n    \n    return explanation;\n  }\n  \n  private getBaseRhythmExplanations(): Record<string, string> {\n    return {\n      'normal_sinus': 'Normal sinus rhythm represents the heart\\'s natural pacemaker (SA node) firing regularly and conducting normally through the heart\\'s electrical system. Each heartbeat begins with atrial activation (P wave), followed by ventricular activation (QRS complex) and recovery (T wave).',\n      \n      'atrial_fibrillation': 'Atrial fibrillation occurs when multiple electrical circuits in the atria fire chaotically, creating an irregular and often rapid heart rhythm. The atria quiver instead of contracting effectively, which can lead to blood pooling and clot formation.',\n      \n      'ventricular_tachycardia': 'Ventricular tachycardia is a fast heart rhythm that originates in the ventricles, bypassing the normal electrical conduction system. This results in wide, abnormal-looking QRS complexes and can be life-threatening if it persists.',\n      \n      'heart_block': 'Heart block occurs when electrical signals are delayed or blocked as they travel from the atria to the ventricles through the AV node. This results in a prolonged PR interval and can progress to more severe forms of block.',\n      \n      'sinus_bradycardia': 'Sinus bradycardia is a normal heart rhythm that occurs at a slow rate, typically less than 60 beats per minute. While the electrical pathway is normal, the SA node fires more slowly than usual.',\n      \n      'sinus_tachycardia': 'Sinus tachycardia is a normal heart rhythm occurring at a fast rate, typically over 100 beats per minute. This usually represents the heart\\'s appropriate response to increased metabolic demands or physiological stress.'\n    };\n  }\n  \n  private simplifyExplanation(explanation: string): string {\n    return explanation\n      .replace(/SA node/g, 'heart\\'s natural pacemaker')\n      .replace(/AV node/g, 'electrical junction')\n      .replace(/atrial fibrillation/g, 'irregular heart rhythm')\n      .replace(/ventricular tachycardia/g, 'fast dangerous rhythm')\n      .replace(/QRS complex/g, 'heart beat signal')\n      .replace(/pathophysiology/g, 'how the problem works')\n      .replace(/conduction system/g, 'electrical pathway');\n  }\n  \n  private addClinicalContext(explanation: string, analysis: MedicalAnalysis): string {\n    let contextualExplanation = explanation;\n    \n    contextualExplanation += ` In this case, the heart rate is ${analysis.heart_rate} BPM.`;\n    \n    if (analysis.clinical_significance !== 'normal') {\n      contextualExplanation += ` This rhythm is clinically ${analysis.clinical_significance}.`;\n    }\n    \n    // Add symptom information\n    if (analysis.clinical_context.symptoms_likely.length > 0) {\n      contextualExplanation += ` Patients may experience: ${analysis.clinical_context.symptoms_likely.join(', ')}.`;\n    }\n    \n    return contextualExplanation;\n  }\n  \n  private addDetailedPathophysiology(explanation: string, analysis: MedicalAnalysis): string {\n    let detailedExplanation = explanation;\n    \n    detailedExplanation += `\\n\\nPathophysiological Details: ${analysis.pathophysiology}`;\n    \n    // Add detailed timing information\n    detailedExplanation += `\\n\\nConduction Timing:`;\n    detailedExplanation += `\\n• SA to AV delay: ${analysis.conduction_timing.sa_to_av_delay}ms`;\n    detailedExplanation += `\\n• AV to His delay: ${analysis.conduction_timing.av_to_his_delay}ms`;\n    detailedExplanation += `\\n• His to Purkinje delay: ${analysis.conduction_timing.his_to_purkinje_delay}ms`;\n    detailedExplanation += `\\n• Total cycle time: ${analysis.conduction_timing.cardiac_cycle_ms}ms`;\n    \n    // Add chamber coordination details\n    detailedExplanation += `\\n\\nChamber Coordination:`;\n    detailedExplanation += `\\n• Atrial contraction: ${analysis.chamber_coordination.atrial_contraction ? 'Present' : 'Absent'}`;\n    detailedExplanation += `\\n• Ventricular contraction: ${analysis.chamber_coordination.ventricular_contraction ? 'Present' : 'Absent'}`;\n    detailedExplanation += `\\n• AV synchrony: ${analysis.chamber_coordination.av_synchrony ? 'Maintained' : 'Lost'}`;\n    \n    return detailedExplanation;\n  }\n  \n  /**\n   * Generate clinical significance explanation\n   */\n  private generateClinicalSignificanceExplanation(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const significance = analysis.clinical_significance;\n    \n    const explanations: Record<string, Record<LearningLevel, string>> = {\n      'normal': {\n        'beginner': 'This heart rhythm is normal and healthy. No treatment is needed.',\n        'intermediate': 'This represents normal cardiac electrical activity with no immediate clinical concerns. Regular monitoring is appropriate.',\n        'advanced': 'Normal sinus rhythm with physiological parameters within expected ranges. Routine cardiovascular risk assessment and lifestyle counseling are appropriate.'\n      },\n      'monitor': {\n        'beginner': 'This rhythm should be watched carefully. Tell your doctor about any symptoms.',\n        'intermediate': 'This rhythm requires monitoring and clinical correlation. Patient symptoms and underlying conditions should be evaluated.',\n        'advanced': 'Requires ongoing cardiac monitoring with assessment for progression. Evaluate for underlying pathology, medication effects, and hemodynamic impact.'\n      },\n      'urgent': {\n        'beginner': 'This rhythm needs medical attention soon. Contact your healthcare provider.',\n        'intermediate': 'This rhythm requires prompt medical evaluation and potential intervention. Monitor for symptom development and rhythm progression.',\n        'advanced': 'Urgent cardiology consultation indicated. Assess hemodynamic stability, consider antiarrhythmic therapy, and evaluate for reversible causes. Continuous monitoring required.'\n      },\n      'critical': {\n        'beginner': 'This rhythm is dangerous and needs immediate emergency care.',\n        'intermediate': 'This rhythm is life-threatening and requires immediate emergency medical intervention and continuous monitoring.',\n        'advanced': 'Critical arrhythmia requiring immediate advanced cardiac life support protocols. Prepare for emergent cardioversion/defibrillation. Assess airway, breathing, circulation. Consider reversible causes and immediate pharmacological intervention.'\n      }\n    };\n    \n    return explanations[significance]?.[level] || 'Clinical significance requires further evaluation.';\n  }\n  \n  /**\n   * Generate synchronized narration timing\n   */\n  private generateNarrationTiming(\n    analysis: MedicalAnalysis, \n    level: LearningLevel, \n    visualTiming?: any\n  ): NarrationCue[] {\n    const cycleDuration = analysis.conduction_timing.cardiac_cycle_ms;\n    const narrationCues: NarrationCue[] = [];\n    \n    // Opening narration\n    narrationCues.push({\n      timestamp_ms: 0,\n      content: this.generateOpeningNarration(analysis, level),\n      emphasis_level: 'important',\n      visual_highlight: 'sa_node',\n      audio_cue: 'heartbeat'\n    });\n    \n    // SA node activation\n    narrationCues.push({\n      timestamp_ms: 50,\n      content: this.generateSANodeNarration(analysis, level),\n      emphasis_level: 'normal',\n      visual_highlight: 'sa_node',\n      audio_cue: 'electrical'\n    });\n    \n    // Atrial activation\n    narrationCues.push({\n      timestamp_ms: 200,\n      content: this.generateAtrialNarration(analysis, level),\n      emphasis_level: 'normal',\n      visual_highlight: 'atria',\n      audio_cue: 'electrical'\n    });\n    \n    // AV node\n    const avDelay = analysis.conduction_timing.sa_to_av_delay;\n    narrationCues.push({\n      timestamp_ms: avDelay,\n      content: this.generateAVNodeNarration(analysis, level),\n      emphasis_level: analysis.rhythm_classification === 'heart_block' ? 'critical' : 'normal',\n      visual_highlight: 'av_node',\n      audio_cue: 'electrical'\n    });\n    \n    // Ventricular activation\n    const ventricularActivation = avDelay + analysis.conduction_timing.av_to_his_delay;\n    narrationCues.push({\n      timestamp_ms: ventricularActivation,\n      content: this.generateVentricularNarration(analysis, level),\n      emphasis_level: analysis.rhythm_classification.includes('ventricular') ? 'critical' : 'important',\n      visual_highlight: 'ventricles',\n      audio_cue: 'heartbeat'\n    });\n    \n    // Clinical summary\n    narrationCues.push({\n      timestamp_ms: cycleDuration - 200,\n      content: this.generateClinicalSummaryNarration(analysis, level),\n      emphasis_level: analysis.clinical_significance === 'critical' ? 'critical' : 'important'\n    });\n    \n    return narrationCues;\n  }\n  \n  private generateOpeningNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const rhythm = analysis.rhythm_classification.replace('_', ' ');\n    \n    switch (level) {\n      case 'beginner':\n        return `This heart rhythm is called ${rhythm}. Let's watch how the heart beats.`;\n      case 'intermediate':\n        return `This EKG shows ${rhythm} with a heart rate of ${analysis.heart_rate} beats per minute. Observe the electrical conduction pattern.`;\n      case 'advanced':\n        return `Analysis reveals ${rhythm} with ${analysis.heart_rate} BPM. Note the conduction timing: SA-AV delay ${analysis.conduction_timing.sa_to_av_delay}ms, cycle length ${analysis.conduction_timing.cardiac_cycle_ms}ms.`;\n      default:\n        return `Observing ${rhythm}.`;\n    }\n  }\n  \n  private generateSANodeNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    switch (level) {\n      case 'beginner':\n        return 'The heart\\'s natural pacemaker starts each heartbeat.';\n      case 'intermediate':\n        return 'The SA node initiates electrical impulse generation as the primary cardiac pacemaker.';\n      case 'advanced':\n        return 'Sinoatrial node depolarization initiates cardiac cycle. Automaticity and conduction velocity appear normal for this rhythm classification.';\n      default:\n        return 'SA node activation.';\n    }\n  }\n  \n  private generateAtrialNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    if (!analysis.chamber_coordination.atrial_contraction) {\n      switch (level) {\n        case 'beginner':\n          return 'The top chambers are not beating normally.';\n        case 'intermediate':\n          return 'Atrial mechanical function is compromised due to irregular electrical activity.';\n        case 'advanced':\n          return 'Loss of atrial mechanical contribution to ventricular filling. Atrial kick absent, reducing cardiac output by approximately 15-20%.';\n        default:\n          return 'Atrial dysfunction noted.';\n      }\n    }\n    \n    switch (level) {\n      case 'beginner':\n        return 'The heart\\'s top chambers are squeezing blood down to the bottom chambers.';\n      case 'intermediate':\n        return 'Atrial depolarization spreads across both atria, creating the P wave and atrial mechanical contraction.';\n      case 'advanced':\n        return 'Coordinated atrial depolarization with preserved atrial kick contributing to ventricular preload. P wave morphology consistent with sinus origin.';\n      default:\n        return 'Atrial activation proceeding normally.';\n    }\n  }\n  \n  private generateAVNodeNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const prInterval = analysis.intervals.pr_interval;\n    \n    if (prInterval > 200) {\n      switch (level) {\n        case 'beginner':\n          return 'There is a delay in the electrical signal between the top and bottom chambers.';\n        case 'intermediate':\n          return 'AV conduction is delayed with prolonged PR interval, indicating first-degree heart block.';\n        case 'advanced':\n          return `AV nodal conduction delay present. PR interval ${prInterval}ms exceeds normal range (120-200ms). Consider causes including ischemia, medications, or intrinsic AV nodal disease.`;\n        default:\n          return 'AV conduction delay noted.';\n      }\n    }\n    \n    switch (level) {\n      case 'beginner':\n        return 'The electrical signal pauses briefly at the heart\\'s electrical junction.';\n      case 'intermediate':\n        return 'Normal AV nodal conduction with appropriate delay allowing complete atrial emptying.';\n      case 'advanced':\n        return `AV nodal conduction within normal parameters. PR interval ${prInterval}ms. AV node serves as physiological gate, ensuring sequential chamber activation.`;\n      default:\n        return 'AV node conduction normal.';\n    }\n  }\n  \n  private generateVentricularNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const qrsWidth = analysis.intervals.qrs_width;\n    \n    if (analysis.rhythm_classification.includes('ventricular')) {\n      switch (level) {\n        case 'beginner':\n          return 'The bottom chambers are beating too fast and in an abnormal way.';\n        case 'intermediate':\n          return 'Ventricular rhythm with wide QRS complexes indicating abnormal conduction pathway.';\n        case 'advanced':\n          return `Ventricular tachycardia with QRS width ${qrsWidth}ms. Origin below AV node with aberrant conduction through ventricular myocardium. Hemodynamic compromise likely.`;\n        default:\n          return 'Abnormal ventricular activation.';\n      }\n    }\n    \n    switch (level) {\n      case 'beginner':\n        return 'The heart\\'s main pumping chambers squeeze blood to the body and lungs.';\n      case 'intermediate':\n        return 'Ventricular depolarization creates the QRS complex and coordinated ventricular contraction.';\n      case 'advanced':\n        return `Normal ventricular activation via His-Purkinje system. QRS width ${qrsWidth}ms within normal limits. Coordinated biventricular contraction maintains cardiac output.`;\n      default:\n        return 'Ventricular contraction proceeding.';\n    }\n  }\n  \n  private generateClinicalSummaryNarration(analysis: MedicalAnalysis, level: LearningLevel): string {\n    const significance = analysis.clinical_significance;\n    \n    switch (level) {\n      case 'beginner':\n        if (significance === 'critical') {\n          return 'This heart rhythm is dangerous and needs emergency care right away.';\n        } else if (significance === 'urgent') {\n          return 'This heart rhythm needs medical attention soon.';\n        } else if (significance === 'monitor') {\n          return 'This heart rhythm should be watched by a doctor.';\n        } else {\n          return 'This heart rhythm is normal and healthy.';\n        }\n      case 'intermediate':\n        return `Clinical assessment: ${significance} significance. ${analysis.clinical_context.treatment_considerations[0] || 'Continue monitoring.'}`;\n      case 'advanced':\n        return `Comprehensive analysis indicates ${significance} clinical significance. Treatment considerations include: ${analysis.clinical_context.treatment_considerations.join(', ')}. Monitoring requirements: ${analysis.clinical_context.monitoring_requirements.join(', ')}.`;\n      default:\n        return 'Analysis complete.';\n    }\n  }\n  \n  /**\n   * Generate interactive elements for engagement\n   */\n  private generateInteractiveElements(analysis: MedicalAnalysis, level: LearningLevel): any[] {\n    const elements = [];\n    \n    // Add highlighting at key moments\n    elements.push({\n      type: 'highlight',\n      trigger_time: 100,\n      content: {\n        highlight_region: 'sa_node',\n        duration: 2000,\n        color: '#ffff00',\n        description: 'SA Node - Primary Pacemaker'\n      }\n    });\n    \n    if (analysis.chamber_coordination.atrial_contraction) {\n      elements.push({\n        type: 'highlight',\n        trigger_time: 200,\n        content: {\n          highlight_region: 'atria',\n          duration: 1500,\n          color: '#ff6b6b',\n          description: 'Atrial Contraction'\n        }\n      });\n    }\n    \n    elements.push({\n      type: 'highlight',\n      trigger_time: analysis.conduction_timing.sa_to_av_delay,\n      content: {\n        highlight_region: 'av_node',\n        duration: analysis.intervals.pr_interval > 200 ? 3000 : 1000,\n        color: analysis.intervals.pr_interval > 200 ? '#ff4444' : '#ff8800',\n        description: analysis.intervals.pr_interval > 200 ? 'AV Delay (Abnormal)' : 'AV Node'\n      }\n    });\n    \n    elements.push({\n      type: 'highlight',\n      trigger_time: analysis.conduction_timing.sa_to_av_delay + analysis.conduction_timing.av_to_his_delay,\n      content: {\n        highlight_region: 'ventricles',\n        duration: 2000,\n        color: '#4488ff',\n        description: 'Ventricular Activation'\n      }\n    });\n    \n    // Add quiz questions for intermediate/advanced levels\n    if (level !== 'beginner') {\n      elements.push({\n        type: 'quiz',\n        trigger_time: analysis.conduction_timing.cardiac_cycle_ms,\n        content: this.generateQuizQuestion(analysis, level)\n      });\n    }\n    \n    return elements;\n  }\n  \n  private generateQuizQuestion(analysis: MedicalAnalysis, level: LearningLevel): QuizQuestion {\n    const rhythm = analysis.rhythm_classification;\n    \n    const questions: Record<string, Record<LearningLevel, QuizQuestion>> = {\n      'normal_sinus': {\n        'intermediate': {\n          id: 'ns_rate',\n          type: 'multiple_choice',\n          question: 'What is the normal heart rate range for sinus rhythm?',\n          options: ['40-60 BPM', '60-100 BPM', '100-150 BPM', '150-200 BPM'],\n          correct_answer: '60-100 BPM',\n          explanation: 'Normal sinus rhythm typically occurs at 60-100 beats per minute.',\n          difficulty: 'intermediate'\n        },\n        'advanced': {\n          id: 'ns_conduction',\n          type: 'multiple_choice',\n          question: `Given SA-AV delay of ${analysis.conduction_timing.sa_to_av_delay}ms, what does this suggest?`,\n          options: ['Normal conduction', 'First-degree block', 'Second-degree block', 'Third-degree block'],\n          correct_answer: analysis.conduction_timing.sa_to_av_delay > 200 ? 'First-degree block' : 'Normal conduction',\n          explanation: `PR interval reflects AV conduction time. Normal is 120-200ms.`,\n          difficulty: 'advanced'\n        }\n      }\n    };\n    \n    return questions[rhythm]?.[level] || {\n      id: 'general',\n      type: 'true_false',\n      question: `This rhythm is classified as ${rhythm.replace('_', ' ')}. Is this correct?`,\n      correct_answer: 'true',\n      explanation: `Yes, this rhythm is correctly identified as ${rhythm.replace('_', ' ')}.`,\n      difficulty: level\n    };\n  }\n  \n  /**\n   * Generate accessibility features\n   */\n  private generateAccessibilityFeatures(analysis: MedicalAnalysis, level: LearningLevel): EducationalContent['accessibility'] {\n    const rhythm = analysis.rhythm_classification.replace('_', ' ');\n    \n    return {\n      audio_description: `Heart animation showing ${rhythm} with ${analysis.heart_rate} beats per minute. ${analysis.chamber_coordination.atrial_contraction ? 'Atrial contraction visible.' : 'Atrial contraction absent.'} Ventricular contraction ${analysis.chamber_coordination.ventricular_contraction ? 'normal' : 'abnormal'}.`,\n      captions: true,\n      high_contrast: false,\n      screen_reader_compatible: true\n    };\n  }\n  \n  /**\n   * Generate learning progression pathway\n   */\n  private generateLearningProgression(analysis: MedicalAnalysis, level: LearningLevel): EducationalContent['learning_progression'] {\n    const rhythm = analysis.rhythm_classification;\n    \n    const progressionMap: Record<string, any> = {\n      'normal_sinus': {\n        'beginner': {\n          prerequisite_concepts: ['basic_heart_anatomy'],\n          next_level_concepts: ['ekg_waves', 'conduction_system'],\n          mastery_indicators: ['rhythm_identification', 'rate_calculation']\n        },\n        'intermediate': {\n          prerequisite_concepts: ['basic_heart_anatomy', 'ekg_waves', 'conduction_system'],\n          next_level_concepts: ['interval_measurement', 'axis_determination'],\n          mastery_indicators: ['interval_analysis', 'morphology_assessment']\n        },\n        'advanced': {\n          prerequisite_concepts: ['interval_measurement', 'axis_determination', 'pathophysiology'],\n          next_level_concepts: ['complex_arrhythmias', 'treatment_algorithms'],\n          mastery_indicators: ['clinical_correlation', 'treatment_selection']\n        }\n      }\n    };\n    \n    return progressionMap[rhythm]?.[level] || {\n      prerequisite_concepts: ['basic_cardiology'],\n      next_level_concepts: ['advanced_rhythms'],\n      mastery_indicators: ['rhythm_recognition']\n    };\n  }\n  \n  /**\n   * Initialize medical knowledge base\n   */\n  private initializeMedicalKnowledge(): void {\n    this.medicalKnowledgeBase = new Map([\n      ['normal_heart_anatomy', {\n        chambers: ['right_atrium', 'left_atrium', 'right_ventricle', 'left_ventricle'],\n        conduction_system: ['sa_node', 'av_node', 'his_bundle', 'bundle_branches', 'purkinje_fibers'],\n        normal_values: {\n          heart_rate: { min: 60, max: 100 },\n          pr_interval: { min: 120, max: 200 },\n          qrs_duration: { max: 120 },\n          qt_interval: { max: 440 }\n        }\n      }],\n      ['rhythm_classifications', {\n        sinus_rhythms: ['normal_sinus', 'sinus_bradycardia', 'sinus_tachycardia'],\n        atrial_rhythms: ['atrial_fibrillation', 'atrial_flutter', 'premature_atrial_contractions'],\n        ventricular_rhythms: ['ventricular_tachycardia', 'ventricular_fibrillation', 'premature_ventricular_contractions'],\n        heart_blocks: ['first_degree', 'second_degree_type1', 'second_degree_type2', 'third_degree']\n      }]\n    ]);\n  }\n  \n  /**\n   * Initialize content templates\n   */\n  private initializeContentTemplates(): void {\n    this.contentTemplates = new Map([\n      ['rhythm_explanation', {\n        structure: 'definition -> mechanism -> clinical_significance -> treatment',\n        beginner_language: 'simple_terms',\n        intermediate_language: 'clinical_terms',\n        advanced_language: 'pathophysiology_focus'\n      }],\n      ['narration_timing', {\n        opening: 0,\n        sa_activation: 50,\n        atrial_depolarization: 200,\n        av_conduction: 'variable',\n        ventricular_activation: 'calculated',\n        summary: 'end_of_cycle'\n      }]\n    ]);\n  }\n  \n  /**\n   * Initialize narration library\n   */\n  private initializeNarrationLibrary(): void {\n    this.narrationLibrary = new Map([\n      ['sa_node_descriptions', [\n        'The heart\\'s natural pacemaker begins each beat',\n        'Sinoatrial node initiates electrical impulse',\n        'Primary pacemaker depolarizes to start cardiac cycle'\n      ]],\n      ['atrial_descriptions', [\n        'Top chambers fill with blood and contract',\n        'Atrial depolarization spreads across both atria',\n        'Coordinated atrial activation with preserved mechanical function'\n      ]],\n      ['ventricular_descriptions', [\n        'Main pumping chambers contract powerfully',\n        'Ventricular depolarization creates strong contraction',\n        'Coordinated biventricular activation maintains cardiac output'\n      ]]\n    ]);\n  }\n}"