# Render.com Blueprint for EKG Clinical Simulation Engine\n# Production deployment configuration with medical-grade reliability\n\nservices:\n  # Frontend Web Service\n  - type: web\n    name: ekg-simulation-frontend\n    runtime: node\n    plan: pro  # Pro plan for medical application reliability\n    region: oregon  # Low latency region\n    buildCommand: cd apps/web && npm run build\n    startCommand: cd apps/web && npm start\n    healthCheckPath: /api/health\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: MEDICAL_VALIDATION_ENABLED\n        value: \"true\"\n      - key: PERFORMANCE_MONITORING\n        value: \"true\"\n      - key: EDUCATIONAL_MODE\n        value: \"true\"\n      - key: NEXTAUTH_URL\n        sync: false\n      - key: NEXTAUTH_SECRET\n        generateValue: true\n    \n  # Backend API Service  \n  - type: web\n    name: ekg-simulation-api\n    runtime: node\n    plan: pro\n    region: oregon\n    buildCommand: npm run build\n    startCommand: node dist/server.js\n    healthCheckPath: /health\n    envVars:\n      - key: NODE_ENV\n        value: production\n      - key: PORT\n        value: \"3001\"\n      - key: MEDICAL_VALIDATION_STRICT\n        value: \"true\"\n      - key: DATABASE_URL\n        fromService:\n          type: pserv\n          name: ekg-simulation-db\n          property: connectionString\n      - key: REDIS_URL\n        fromService:\n          type: redis\n          name: ekg-simulation-cache\n          property: connectionString\n\n  # Medical Orchestrator Service\n  - type: web\n    name: medical-orchestrator\n    runtime: python\n    plan: standard\n    region: oregon\n    buildCommand: pip install -r agents/orchestrator/requirements.txt\n    startCommand: python agents/orchestrator/medical-orchestrator.py\n    healthCheckPath: /orchestrator/health\n    envVars:\n      - key: PYTHON_ENV\n        value: production\n      - key: MEDICAL_ACCURACY_THRESHOLD\n        value: \"0.95\"\n      - key: VALIDATION_STRICT_MODE\n        value: \"true\"\n\ndatabases:\n  # PostgreSQL for medical data\n  - name: ekg-simulation-db\n    plan: pro  # Pro plan for medical data reliability\n    databaseName: ekg_clinical_simulation\n    user: ekg_admin\n    region: oregon\n    \n  # Redis for caching and real-time sync\n  - name: ekg-simulation-cache\n    plan: pro\n    maxmemoryPolicy: allkeys-lru\n    region: oregon\n\n# Static site for documentation\nstatic:\n  - name: ekg-docs\n    buildCommand: cd docs && npm run build\n    staticPublishPath: docs/dist\n    pullRequestPreviewsEnabled: true\n    headers:\n      - path: /*\n        headers:\n          X-Frame-Options: DENY\n          X-Content-Type-Options: nosniff\n          Referrer-Policy: strict-origin-when-cross-origin\n\n# Background workers for medical processing\nbackgroundWorkers:\n  - name: medical-validator\n    runtime: python\n    plan: standard\n    buildCommand: pip install -r requirements.txt\n    startCommand: python workers/medical-validation-worker.py\n    envVars:\n      - key: WORKER_TYPE\n        value: medical_validation\n      - key: BATCH_SIZE\n        value: \"10\"\n      - key: VALIDATION_TIMEOUT\n        value: \"30000\"\n\n  - name: educational-processor  \n    runtime: node\n    plan: standard\n    buildCommand: npm run build\n    startCommand: node workers/educational-content-processor.js\n    envVars:\n      - key: WORKER_TYPE\n        value: educational_processing\n      - key: CONTENT_GENERATION_TIMEOUT\n        value: \"60000\"\n\n# Monitoring and alerting\nalerts:\n  - type: cpu\n    name: high-cpu-usage\n    value: 80\n    \n  - type: memory\n    name: high-memory-usage \n    value: 85\n    \n  - type: response-time\n    name: slow-response\n    value: 5000  # 5 seconds for medical applications\n    \n  - type: error-rate\n    name: high-error-rate\n    value: 5  # 5% error rate threshold\n\n# Health checks for medical safety\nhealthChecks:\n  - name: medical-accuracy-check\n    path: /api/medical/health\n    interval: 60  # Check every minute\n    timeout: 10\n    \n  - name: visualization-sync-check\n    path: /api/visualization/health\n    interval: 120  # Check every 2 minutes\n    timeout: 15\n    \n  - name: educational-accuracy-check\n    path: /api/education/health\n    interval: 300  # Check every 5 minutes\n    timeout: 20"